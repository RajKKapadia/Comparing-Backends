// Code generated by ent, DO NOT EDIT.

package ent

import (
	"bookmark-shortener/ent/bookmark"
	"bookmark-shortener/ent/schema"
	"bookmark-shortener/ent/user"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	bookmarkFields := schema.Bookmark{}.Fields()
	_ = bookmarkFields
	// bookmarkDescVisitCount is the schema descriptor for visit_count field.
	bookmarkDescVisitCount := bookmarkFields[4].Descriptor()
	// bookmark.DefaultVisitCount holds the default value on creation for the visit_count field.
	bookmark.DefaultVisitCount = bookmarkDescVisitCount.Default.(int)
	// bookmarkDescCreatedAt is the schema descriptor for created_at field.
	bookmarkDescCreatedAt := bookmarkFields[5].Descriptor()
	// bookmark.DefaultCreatedAt holds the default value on creation for the created_at field.
	bookmark.DefaultCreatedAt = bookmarkDescCreatedAt.Default.(func() time.Time)
	// bookmarkDescUpdatedAt is the schema descriptor for updated_at field.
	bookmarkDescUpdatedAt := bookmarkFields[6].Descriptor()
	// bookmark.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	bookmark.DefaultUpdatedAt = bookmarkDescUpdatedAt.Default.(func() time.Time)
	// bookmark.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	bookmark.UpdateDefaultUpdatedAt = bookmarkDescUpdatedAt.UpdateDefault.(func() time.Time)
	// bookmarkDescID is the schema descriptor for id field.
	bookmarkDescID := bookmarkFields[0].Descriptor()
	// bookmark.DefaultID holds the default value on creation for the id field.
	bookmark.DefaultID = bookmarkDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[3].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[4].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
